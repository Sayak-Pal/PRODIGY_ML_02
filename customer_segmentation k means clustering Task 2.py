# -*- coding: utf-8 -*-
"""Copy of  customer segmentation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18xf4Xc-fUh-8QTaoRhJG9D50gbSBevWl
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

import pandas as pd

df = pd.read_csv("Mall_Customers.csv")

print(df.head())
print(df.describe())
print(df.info())

df.isnull().sum()

df.duplicated().sum()

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(8,4))
sns.histplot(df['Age'],kde=True,bins=20)
plt.title('age distribution')
plt.show()

plt.figure(figsize=(8,4))
sns.histplot(df['Spending Score (1-100)'],kde=True,bins=20)
plt.title('sepending distribution')
plt.show()

plt.figure(figsize=(8,4))
sns.scatterplot(x=df['Age'],y=df['Spending Score (1-100)'],hue=df['Gender'])
plt.title('Age vs Spending Score')
plt.show()

plt.figure(figsize=(8,4))
sns.scatterplot(x=df['Annual Income (k$)'],y=df['Spending Score (1-100)'],hue=df['Gender'])
plt.title('Age vs Spending Score')
plt.show()

sns.pairplot(df[['Age', 'Annual Income (k$)', 'Spending Score (1-100)']])
plt.show()

plt.figure(figsize=(12,4))
plt.subplot(1,3,1)
sns.boxplot(x='Gender', y='Age', data=df)
plt.subplot(1,3,2)
sns.boxplot(x='Gender', y='Annual Income (k$)', data=df)
plt.subplot(1,3,3)
sns.boxplot(x='Gender', y='Spending Score (1-100)', data=df)
plt.tight_layout()
plt.show()

sns.histplot(df['Annual Income (k$)'])

from sklearn.preprocessing import StandardScaler

scale=StandardScaler()
cols=df[['Age', 'Annual Income (k$)', 'Spending Score (1-100)']]
cols_scale=scale.fit_transform(cols)

df['Gender']=df['Gender'].map({'Male':0,'Female':1})

df['Gender']

from sklearn.cluster import KMeans

inertia=[]
k=range(1,11)

for i in k:
    kmeans=KMeans(n_clusters=i,random_state=34)
    kmeans.fit(cols_scale)
    inertia.append(kmeans.inertia_)

plt.figure(figsize=(10,7))
plt.plot(k,inertia,marker='o')
plt.title('elbow method to find k')
plt.xlabel('number of cluster')
plt.ylabel('inertai')
plt.show()

kmeans=KMeans(n_clusters=5,random_state=4)
df['cluster']=kmeans.fit_predict(cols_scale)

cluster_gender=df.groupby('cluster')['Gender'].value_counts().reset_index()
print(cluster_gender)

sns.countplot(x=df['cluster'],hue=df['Gender'])

df.groupby('cluster')[['Age', 'Annual Income (k$)', 'Spending Score (1-100)']].mean()

cluster_counts = df['cluster'].value_counts().sort_index()

plt.figure(figsize=(7,5))
sns.barplot(x=cluster_counts.index, y=cluster_counts.values, palette='muted')
plt.title("Number of Customers in Each Cluster")
plt.xlabel("Cluster")
plt.ylabel("Count")
plt.show()